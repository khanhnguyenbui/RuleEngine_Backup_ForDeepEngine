# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class User(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, user_id: str=None, birth_date: int=None, birth_month: int=None, birth_year: int=None, first_name: str=None, last_name: str=None):  # noqa: E501
        """User - a model defined in Swagger

        :param user_id: The user_id of this User.  # noqa: E501
        :type user_id: str
        :param birth_date: The birth_date of this User.  # noqa: E501
        :type birth_date: int
        :param birth_month: The birth_month of this User.  # noqa: E501
        :type birth_month: int
        :param birth_year: The birth_year of this User.  # noqa: E501
        :type birth_year: int
        :param first_name: The first_name of this User.  # noqa: E501
        :type first_name: str
        :param last_name: The last_name of this User.  # noqa: E501
        :type last_name: str
        """
        self.swagger_types = {
            'user_id': str,
            'birth_date': int,
            'birth_month': int,
            'birth_year': int,
            'first_name': str,
            'last_name': str
        }

        self.attribute_map = {
            'user_id': 'userID',
            'birth_date': 'birthDate',
            'birth_month': 'birthMonth',
            'birth_year': 'birthYear',
            'first_name': 'firstName',
            'last_name': 'lastName'
        }

        self._user_id = user_id
        self._birth_date = birth_date
        self._birth_month = birth_month
        self._birth_year = birth_year
        self._first_name = first_name
        self._last_name = last_name

    @classmethod
    def from_dict(cls, dikt) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The User of this User.  # noqa: E501
        :rtype: User
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_id(self) -> str:
        """Gets the user_id of this User.

        Unique...  # noqa: E501

        :return: The user_id of this User.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id: str):
        """Sets the user_id of this User.

        Unique...  # noqa: E501

        :param user_id: The user_id of this User.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def birth_date(self) -> int:
        """Gets the birth_date of this User.


        :return: The birth_date of this User.
        :rtype: int
        """
        return self._birth_date

    @birth_date.setter
    def birth_date(self, birth_date: int):
        """Sets the birth_date of this User.


        :param birth_date: The birth_date of this User.
        :type birth_date: int
        """

        self._birth_date = birth_date

    @property
    def birth_month(self) -> int:
        """Gets the birth_month of this User.


        :return: The birth_month of this User.
        :rtype: int
        """
        return self._birth_month

    @birth_month.setter
    def birth_month(self, birth_month: int):
        """Sets the birth_month of this User.


        :param birth_month: The birth_month of this User.
        :type birth_month: int
        """

        self._birth_month = birth_month

    @property
    def birth_year(self) -> int:
        """Gets the birth_year of this User.


        :return: The birth_year of this User.
        :rtype: int
        """
        return self._birth_year

    @birth_year.setter
    def birth_year(self, birth_year: int):
        """Sets the birth_year of this User.


        :param birth_year: The birth_year of this User.
        :type birth_year: int
        """

        self._birth_year = birth_year

    @property
    def first_name(self) -> str:
        """Gets the first_name of this User.


        :return: The first_name of this User.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name: str):
        """Sets the first_name of this User.


        :param first_name: The first_name of this User.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self) -> str:
        """Gets the last_name of this User.


        :return: The last_name of this User.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name: str):
        """Sets the last_name of this User.


        :param last_name: The last_name of this User.
        :type last_name: str
        """

        self._last_name = last_name
